/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode p1 = headA;
        ListNode p2 = headB;
        int l1=0,l2=0,diff,i;
        while(p1!=null)
        {
            l1++;
            p1=p1.next;
        }
        while(p2!=null)
        {
            l2++;
            p2=p2.next;
        }
        p1=headA;
        p2=headB;
        if(l1>l2)
        {
            i=0;
            diff = l1-l2;
            while(i<diff)
            {
                p1=p1.next;
                i++;
            }
        }
        else if(l1<l2)
        {
            i=0;
            diff = l2-l1;
            while(i<diff)
            {
                p2=p2.next;
                i++;
            }
        }
        while(p1!=p2)
        {
            p1=p1.next;
            p2=p2.next;
        }
        return p1;
    }
}
